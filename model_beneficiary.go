/*
Cashfree Payout APIs

Cashfree's Payout APIs provide developers with a streamlined pathway to integrate advanced payout capabilities into their applications, platforms and websites.

API version: 2024-01-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_payout

import (
	"encoding/json"
)

// checks if the Beneficiary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Beneficiary{}

// Beneficiary Contains the information of the created beneficiary
type Beneficiary struct {
        // It displays the unique ID you created to identify the beneficiary.
    BeneficiaryId *string `json:"beneficiary_id,omitempty"`
        // It displays the name of the beneficiary.
    BeneficiaryName *string `json:"beneficiary_name,omitempty"`
    BeneficiaryInstrumentDetails *BeneficiaryBeneficiaryInstrumentDetails `json:"beneficiary_instrument_details,omitempty"`
    BeneficiaryContactDetails *BeneficiaryBeneficiaryContactDetails `json:"beneficiary_contact_details,omitempty"`
        // It displays the current status of the beneficiary. Possible values are as follows - `VERIFIED`: Beneficiary is verified and is available for payouts - `INVALID`: Beneficiary is invalid - `INITIATED`: Beneficiary verification initiated - `CANCELLED`: Beneficiary verification cancelled - `FAILED`: Failed to verify beneficiary - `DELETED`: Beneficiary is deleted
    BeneficiaryStatus *string `json:"beneficiary_status,omitempty"`
        // It displays the time of the addition of the beneficiary in UTC.
    AddedOn *string `json:"added_on,omitempty"`
}

// NewBeneficiary instantiates a new Beneficiary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBeneficiary() *Beneficiary {
this := Beneficiary{}
return &this
}

// NewBeneficiaryWithDefaults instantiates a new Beneficiary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBeneficiaryWithDefaults() *Beneficiary {
this := Beneficiary{}
return &this
}

        // GetBeneficiaryId returns the BeneficiaryId field value if set, zero value otherwise.
        func (o *Beneficiary) GetBeneficiaryId() string {
        if o == nil || IsNil(o.BeneficiaryId) {
        var ret string
        return ret
        }
            return *o.BeneficiaryId
        }

        // GetBeneficiaryIdOk returns a tuple with the BeneficiaryId field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *Beneficiary) GetBeneficiaryIdOk() (*string, bool) {
        if o == nil || IsNil(o.BeneficiaryId) {
            return nil, false
        }
            return o.BeneficiaryId, true
        }

        // HasBeneficiaryId returns a boolean if a field has been set.
        func (o *Beneficiary) HasBeneficiaryId() bool {
        if o != nil && !IsNil(o.BeneficiaryId) {
        return true
        }

        return false
        }

        // SetBeneficiaryId gets a reference to the given string and assigns it to the BeneficiaryId field.
        func (o *Beneficiary) SetBeneficiaryId(v string) {
            o.BeneficiaryId = &v
        }

        // GetBeneficiaryName returns the BeneficiaryName field value if set, zero value otherwise.
        func (o *Beneficiary) GetBeneficiaryName() string {
        if o == nil || IsNil(o.BeneficiaryName) {
        var ret string
        return ret
        }
            return *o.BeneficiaryName
        }

        // GetBeneficiaryNameOk returns a tuple with the BeneficiaryName field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *Beneficiary) GetBeneficiaryNameOk() (*string, bool) {
        if o == nil || IsNil(o.BeneficiaryName) {
            return nil, false
        }
            return o.BeneficiaryName, true
        }

        // HasBeneficiaryName returns a boolean if a field has been set.
        func (o *Beneficiary) HasBeneficiaryName() bool {
        if o != nil && !IsNil(o.BeneficiaryName) {
        return true
        }

        return false
        }

        // SetBeneficiaryName gets a reference to the given string and assigns it to the BeneficiaryName field.
        func (o *Beneficiary) SetBeneficiaryName(v string) {
            o.BeneficiaryName = &v
        }

        // GetBeneficiaryInstrumentDetails returns the BeneficiaryInstrumentDetails field value if set, zero value otherwise.
        func (o *Beneficiary) GetBeneficiaryInstrumentDetails() BeneficiaryBeneficiaryInstrumentDetails {
        if o == nil || IsNil(o.BeneficiaryInstrumentDetails) {
        var ret BeneficiaryBeneficiaryInstrumentDetails
        return ret
        }
            return *o.BeneficiaryInstrumentDetails
        }

        // GetBeneficiaryInstrumentDetailsOk returns a tuple with the BeneficiaryInstrumentDetails field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *Beneficiary) GetBeneficiaryInstrumentDetailsOk() (*BeneficiaryBeneficiaryInstrumentDetails, bool) {
        if o == nil || IsNil(o.BeneficiaryInstrumentDetails) {
            return nil, false
        }
            return o.BeneficiaryInstrumentDetails, true
        }

        // HasBeneficiaryInstrumentDetails returns a boolean if a field has been set.
        func (o *Beneficiary) HasBeneficiaryInstrumentDetails() bool {
        if o != nil && !IsNil(o.BeneficiaryInstrumentDetails) {
        return true
        }

        return false
        }

        // SetBeneficiaryInstrumentDetails gets a reference to the given BeneficiaryBeneficiaryInstrumentDetails and assigns it to the BeneficiaryInstrumentDetails field.
        func (o *Beneficiary) SetBeneficiaryInstrumentDetails(v BeneficiaryBeneficiaryInstrumentDetails) {
            o.BeneficiaryInstrumentDetails = &v
        }

        // GetBeneficiaryContactDetails returns the BeneficiaryContactDetails field value if set, zero value otherwise.
        func (o *Beneficiary) GetBeneficiaryContactDetails() BeneficiaryBeneficiaryContactDetails {
        if o == nil || IsNil(o.BeneficiaryContactDetails) {
        var ret BeneficiaryBeneficiaryContactDetails
        return ret
        }
            return *o.BeneficiaryContactDetails
        }

        // GetBeneficiaryContactDetailsOk returns a tuple with the BeneficiaryContactDetails field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *Beneficiary) GetBeneficiaryContactDetailsOk() (*BeneficiaryBeneficiaryContactDetails, bool) {
        if o == nil || IsNil(o.BeneficiaryContactDetails) {
            return nil, false
        }
            return o.BeneficiaryContactDetails, true
        }

        // HasBeneficiaryContactDetails returns a boolean if a field has been set.
        func (o *Beneficiary) HasBeneficiaryContactDetails() bool {
        if o != nil && !IsNil(o.BeneficiaryContactDetails) {
        return true
        }

        return false
        }

        // SetBeneficiaryContactDetails gets a reference to the given BeneficiaryBeneficiaryContactDetails and assigns it to the BeneficiaryContactDetails field.
        func (o *Beneficiary) SetBeneficiaryContactDetails(v BeneficiaryBeneficiaryContactDetails) {
            o.BeneficiaryContactDetails = &v
        }

        // GetBeneficiaryStatus returns the BeneficiaryStatus field value if set, zero value otherwise.
        func (o *Beneficiary) GetBeneficiaryStatus() string {
        if o == nil || IsNil(o.BeneficiaryStatus) {
        var ret string
        return ret
        }
            return *o.BeneficiaryStatus
        }

        // GetBeneficiaryStatusOk returns a tuple with the BeneficiaryStatus field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *Beneficiary) GetBeneficiaryStatusOk() (*string, bool) {
        if o == nil || IsNil(o.BeneficiaryStatus) {
            return nil, false
        }
            return o.BeneficiaryStatus, true
        }

        // HasBeneficiaryStatus returns a boolean if a field has been set.
        func (o *Beneficiary) HasBeneficiaryStatus() bool {
        if o != nil && !IsNil(o.BeneficiaryStatus) {
        return true
        }

        return false
        }

        // SetBeneficiaryStatus gets a reference to the given string and assigns it to the BeneficiaryStatus field.
        func (o *Beneficiary) SetBeneficiaryStatus(v string) {
            o.BeneficiaryStatus = &v
        }

        // GetAddedOn returns the AddedOn field value if set, zero value otherwise.
        func (o *Beneficiary) GetAddedOn() string {
        if o == nil || IsNil(o.AddedOn) {
        var ret string
        return ret
        }
            return *o.AddedOn
        }

        // GetAddedOnOk returns a tuple with the AddedOn field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *Beneficiary) GetAddedOnOk() (*string, bool) {
        if o == nil || IsNil(o.AddedOn) {
            return nil, false
        }
            return o.AddedOn, true
        }

        // HasAddedOn returns a boolean if a field has been set.
        func (o *Beneficiary) HasAddedOn() bool {
        if o != nil && !IsNil(o.AddedOn) {
        return true
        }

        return false
        }

        // SetAddedOn gets a reference to the given string and assigns it to the AddedOn field.
        func (o *Beneficiary) SetAddedOn(v string) {
            o.AddedOn = &v
        }

func (o Beneficiary) ToMap() (map[string]interface{}, error) {
toSerialize := map[string]interface{}{}
            if !IsNil(o.BeneficiaryId) {
            toSerialize["beneficiary_id"] = o.BeneficiaryId
            }
            if !IsNil(o.BeneficiaryName) {
            toSerialize["beneficiary_name"] = o.BeneficiaryName
            }
            if !IsNil(o.BeneficiaryInstrumentDetails) {
            toSerialize["beneficiary_instrument_details"] = o.BeneficiaryInstrumentDetails
            }
            if !IsNil(o.BeneficiaryContactDetails) {
            toSerialize["beneficiary_contact_details"] = o.BeneficiaryContactDetails
            }
            if !IsNil(o.BeneficiaryStatus) {
            toSerialize["beneficiary_status"] = o.BeneficiaryStatus
            }
            if !IsNil(o.AddedOn) {
            toSerialize["added_on"] = o.AddedOn
            }
return toSerialize, nil
}



