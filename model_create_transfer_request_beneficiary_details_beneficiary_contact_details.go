/*
Cashfree Payout APIs

Cashfree's Payout APIs provide developers with a streamlined pathway to integrate advanced payout capabilities into their applications, platforms and websites.

API version: 2024-01-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_payout

import (
	"encoding/json"
)

// checks if the CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails{}

// CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails It should contain the contact details of the beneficiary.
type CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails struct {
        // It is the email address of the beneficiary. The maximum character limit is 200. It should contain dot (.) and at the rate of (@).
    BeneficiaryEmail *string `json:"beneficiary_email,omitempty"`
        // It is the phone number of the beneficiary. Only registered Indian phone numbers are allowed. The value should be between 8 and 12 characters after stripping +91.
    BeneficiaryPhone *string `json:"beneficiary_phone,omitempty"`
        // It is the country code (+91) of the beneficiary's phone number.
    BeneficiaryCountryCode *string `json:"beneficiary_country_code,omitempty"`
        // It should contain the address of the beneficiary. The maximum character limit is 150. Alphanumeric characters and whitespaces are allowed.
    BeneficiaryAddress *string `json:"beneficiary_address,omitempty"`
        // It is the name of the city as present in the beneficiary address. The maximum character limit is 50. Alphanumeric characters and whitespaces are allowed.
    BeneficiaryCity *string `json:"beneficiary_city,omitempty"`
        // It is the name of the state as present in the beneficiary address. The maximum character limit is 50. Alphanumeric characters and whitespaces are allowed.
    BeneficiaryState *string `json:"beneficiary_state,omitempty"`
        // It is the PIN code as present in the address. It should be a 6 character numeric value.
    BeneficiaryPostalCode *string `json:"beneficiary_postal_code,omitempty"`
}

// NewCreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails instantiates a new CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails() *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails {
this := CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails{}
return &this
}

// NewCreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetailsWithDefaults instantiates a new CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetailsWithDefaults() *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails {
this := CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails{}
return &this
}

        // GetBeneficiaryEmail returns the BeneficiaryEmail field value if set, zero value otherwise.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) GetBeneficiaryEmail() string {
        if o == nil || IsNil(o.BeneficiaryEmail) {
        var ret string
        return ret
        }
            return *o.BeneficiaryEmail
        }

        // GetBeneficiaryEmailOk returns a tuple with the BeneficiaryEmail field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) GetBeneficiaryEmailOk() (*string, bool) {
        if o == nil || IsNil(o.BeneficiaryEmail) {
            return nil, false
        }
            return o.BeneficiaryEmail, true
        }

        // HasBeneficiaryEmail returns a boolean if a field has been set.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) HasBeneficiaryEmail() bool {
        if o != nil && !IsNil(o.BeneficiaryEmail) {
        return true
        }

        return false
        }

        // SetBeneficiaryEmail gets a reference to the given string and assigns it to the BeneficiaryEmail field.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) SetBeneficiaryEmail(v string) {
            o.BeneficiaryEmail = &v
        }

        // GetBeneficiaryPhone returns the BeneficiaryPhone field value if set, zero value otherwise.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) GetBeneficiaryPhone() string {
        if o == nil || IsNil(o.BeneficiaryPhone) {
        var ret string
        return ret
        }
            return *o.BeneficiaryPhone
        }

        // GetBeneficiaryPhoneOk returns a tuple with the BeneficiaryPhone field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) GetBeneficiaryPhoneOk() (*string, bool) {
        if o == nil || IsNil(o.BeneficiaryPhone) {
            return nil, false
        }
            return o.BeneficiaryPhone, true
        }

        // HasBeneficiaryPhone returns a boolean if a field has been set.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) HasBeneficiaryPhone() bool {
        if o != nil && !IsNil(o.BeneficiaryPhone) {
        return true
        }

        return false
        }

        // SetBeneficiaryPhone gets a reference to the given string and assigns it to the BeneficiaryPhone field.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) SetBeneficiaryPhone(v string) {
            o.BeneficiaryPhone = &v
        }

        // GetBeneficiaryCountryCode returns the BeneficiaryCountryCode field value if set, zero value otherwise.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) GetBeneficiaryCountryCode() string {
        if o == nil || IsNil(o.BeneficiaryCountryCode) {
        var ret string
        return ret
        }
            return *o.BeneficiaryCountryCode
        }

        // GetBeneficiaryCountryCodeOk returns a tuple with the BeneficiaryCountryCode field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) GetBeneficiaryCountryCodeOk() (*string, bool) {
        if o == nil || IsNil(o.BeneficiaryCountryCode) {
            return nil, false
        }
            return o.BeneficiaryCountryCode, true
        }

        // HasBeneficiaryCountryCode returns a boolean if a field has been set.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) HasBeneficiaryCountryCode() bool {
        if o != nil && !IsNil(o.BeneficiaryCountryCode) {
        return true
        }

        return false
        }

        // SetBeneficiaryCountryCode gets a reference to the given string and assigns it to the BeneficiaryCountryCode field.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) SetBeneficiaryCountryCode(v string) {
            o.BeneficiaryCountryCode = &v
        }

        // GetBeneficiaryAddress returns the BeneficiaryAddress field value if set, zero value otherwise.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) GetBeneficiaryAddress() string {
        if o == nil || IsNil(o.BeneficiaryAddress) {
        var ret string
        return ret
        }
            return *o.BeneficiaryAddress
        }

        // GetBeneficiaryAddressOk returns a tuple with the BeneficiaryAddress field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) GetBeneficiaryAddressOk() (*string, bool) {
        if o == nil || IsNil(o.BeneficiaryAddress) {
            return nil, false
        }
            return o.BeneficiaryAddress, true
        }

        // HasBeneficiaryAddress returns a boolean if a field has been set.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) HasBeneficiaryAddress() bool {
        if o != nil && !IsNil(o.BeneficiaryAddress) {
        return true
        }

        return false
        }

        // SetBeneficiaryAddress gets a reference to the given string and assigns it to the BeneficiaryAddress field.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) SetBeneficiaryAddress(v string) {
            o.BeneficiaryAddress = &v
        }

        // GetBeneficiaryCity returns the BeneficiaryCity field value if set, zero value otherwise.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) GetBeneficiaryCity() string {
        if o == nil || IsNil(o.BeneficiaryCity) {
        var ret string
        return ret
        }
            return *o.BeneficiaryCity
        }

        // GetBeneficiaryCityOk returns a tuple with the BeneficiaryCity field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) GetBeneficiaryCityOk() (*string, bool) {
        if o == nil || IsNil(o.BeneficiaryCity) {
            return nil, false
        }
            return o.BeneficiaryCity, true
        }

        // HasBeneficiaryCity returns a boolean if a field has been set.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) HasBeneficiaryCity() bool {
        if o != nil && !IsNil(o.BeneficiaryCity) {
        return true
        }

        return false
        }

        // SetBeneficiaryCity gets a reference to the given string and assigns it to the BeneficiaryCity field.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) SetBeneficiaryCity(v string) {
            o.BeneficiaryCity = &v
        }

        // GetBeneficiaryState returns the BeneficiaryState field value if set, zero value otherwise.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) GetBeneficiaryState() string {
        if o == nil || IsNil(o.BeneficiaryState) {
        var ret string
        return ret
        }
            return *o.BeneficiaryState
        }

        // GetBeneficiaryStateOk returns a tuple with the BeneficiaryState field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) GetBeneficiaryStateOk() (*string, bool) {
        if o == nil || IsNil(o.BeneficiaryState) {
            return nil, false
        }
            return o.BeneficiaryState, true
        }

        // HasBeneficiaryState returns a boolean if a field has been set.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) HasBeneficiaryState() bool {
        if o != nil && !IsNil(o.BeneficiaryState) {
        return true
        }

        return false
        }

        // SetBeneficiaryState gets a reference to the given string and assigns it to the BeneficiaryState field.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) SetBeneficiaryState(v string) {
            o.BeneficiaryState = &v
        }

        // GetBeneficiaryPostalCode returns the BeneficiaryPostalCode field value if set, zero value otherwise.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) GetBeneficiaryPostalCode() string {
        if o == nil || IsNil(o.BeneficiaryPostalCode) {
        var ret string
        return ret
        }
            return *o.BeneficiaryPostalCode
        }

        // GetBeneficiaryPostalCodeOk returns a tuple with the BeneficiaryPostalCode field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) GetBeneficiaryPostalCodeOk() (*string, bool) {
        if o == nil || IsNil(o.BeneficiaryPostalCode) {
            return nil, false
        }
            return o.BeneficiaryPostalCode, true
        }

        // HasBeneficiaryPostalCode returns a boolean if a field has been set.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) HasBeneficiaryPostalCode() bool {
        if o != nil && !IsNil(o.BeneficiaryPostalCode) {
        return true
        }

        return false
        }

        // SetBeneficiaryPostalCode gets a reference to the given string and assigns it to the BeneficiaryPostalCode field.
        func (o *CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) SetBeneficiaryPostalCode(v string) {
            o.BeneficiaryPostalCode = &v
        }

    func (o CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
    return []byte{}, err
    }
    return json.Marshal(toSerialize)
    }

func (o CreateTransferRequestBeneficiaryDetailsBeneficiaryContactDetails) ToMap() (map[string]interface{}, error) {
toSerialize := map[string]interface{}{}
            if !IsNil(o.BeneficiaryEmail) {
            toSerialize["beneficiary_email"] = o.BeneficiaryEmail
            }
            if !IsNil(o.BeneficiaryPhone) {
            toSerialize["beneficiary_phone"] = o.BeneficiaryPhone
            }
            if !IsNil(o.BeneficiaryCountryCode) {
            toSerialize["beneficiary_country_code"] = o.BeneficiaryCountryCode
            }
            if !IsNil(o.BeneficiaryAddress) {
            toSerialize["beneficiary_address"] = o.BeneficiaryAddress
            }
            if !IsNil(o.BeneficiaryCity) {
            toSerialize["beneficiary_city"] = o.BeneficiaryCity
            }
            if !IsNil(o.BeneficiaryState) {
            toSerialize["beneficiary_state"] = o.BeneficiaryState
            }
            if !IsNil(o.BeneficiaryPostalCode) {
            toSerialize["beneficiary_postal_code"] = o.BeneficiaryPostalCode
            }
return toSerialize, nil
}



