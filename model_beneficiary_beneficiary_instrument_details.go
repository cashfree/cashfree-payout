/*
Cashfree Payout APIs

Cashfree's Payout APIs provide developers with a streamlined pathway to integrate advanced payout capabilities into their applications, platforms and websites.

API version: 2024-01-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_payout

import (
	"encoding/json"
)

// checks if the BeneficiaryBeneficiaryInstrumentDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BeneficiaryBeneficiaryInstrumentDetails{}

// BeneficiaryBeneficiaryInstrumentDetails It displays the payment instrument details of the beneficiary.
type BeneficiaryBeneficiaryInstrumentDetails struct {
        // It displays the bank account of the beneficiary.]
    BankAccountNumber *string `json:"bank_account_number,omitempty"`
        // It displays the IFSC information of the beneficiary's bank account.
    BankIfsc *string `json:"bank_ifsc,omitempty"`
        // It displays the UPI VPA information of the beneficiary.
    Vpa *string `json:"vpa,omitempty"`
}

// NewBeneficiaryBeneficiaryInstrumentDetails instantiates a new BeneficiaryBeneficiaryInstrumentDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBeneficiaryBeneficiaryInstrumentDetails() *BeneficiaryBeneficiaryInstrumentDetails {
this := BeneficiaryBeneficiaryInstrumentDetails{}
return &this
}

// NewBeneficiaryBeneficiaryInstrumentDetailsWithDefaults instantiates a new BeneficiaryBeneficiaryInstrumentDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBeneficiaryBeneficiaryInstrumentDetailsWithDefaults() *BeneficiaryBeneficiaryInstrumentDetails {
this := BeneficiaryBeneficiaryInstrumentDetails{}
return &this
}

        // GetBankAccountNumber returns the BankAccountNumber field value if set, zero value otherwise.
        func (o *BeneficiaryBeneficiaryInstrumentDetails) GetBankAccountNumber() string {
        if o == nil || IsNil(o.BankAccountNumber) {
        var ret string
        return ret
        }
            return *o.BankAccountNumber
        }

        // GetBankAccountNumberOk returns a tuple with the BankAccountNumber field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *BeneficiaryBeneficiaryInstrumentDetails) GetBankAccountNumberOk() (*string, bool) {
        if o == nil || IsNil(o.BankAccountNumber) {
            return nil, false
        }
            return o.BankAccountNumber, true
        }

        // HasBankAccountNumber returns a boolean if a field has been set.
        func (o *BeneficiaryBeneficiaryInstrumentDetails) HasBankAccountNumber() bool {
        if o != nil && !IsNil(o.BankAccountNumber) {
        return true
        }

        return false
        }

        // SetBankAccountNumber gets a reference to the given string and assigns it to the BankAccountNumber field.
        func (o *BeneficiaryBeneficiaryInstrumentDetails) SetBankAccountNumber(v string) {
            o.BankAccountNumber = &v
        }

        // GetBankIfsc returns the BankIfsc field value if set, zero value otherwise.
        func (o *BeneficiaryBeneficiaryInstrumentDetails) GetBankIfsc() string {
        if o == nil || IsNil(o.BankIfsc) {
        var ret string
        return ret
        }
            return *o.BankIfsc
        }

        // GetBankIfscOk returns a tuple with the BankIfsc field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *BeneficiaryBeneficiaryInstrumentDetails) GetBankIfscOk() (*string, bool) {
        if o == nil || IsNil(o.BankIfsc) {
            return nil, false
        }
            return o.BankIfsc, true
        }

        // HasBankIfsc returns a boolean if a field has been set.
        func (o *BeneficiaryBeneficiaryInstrumentDetails) HasBankIfsc() bool {
        if o != nil && !IsNil(o.BankIfsc) {
        return true
        }

        return false
        }

        // SetBankIfsc gets a reference to the given string and assigns it to the BankIfsc field.
        func (o *BeneficiaryBeneficiaryInstrumentDetails) SetBankIfsc(v string) {
            o.BankIfsc = &v
        }

        // GetVpa returns the Vpa field value if set, zero value otherwise.
        func (o *BeneficiaryBeneficiaryInstrumentDetails) GetVpa() string {
        if o == nil || IsNil(o.Vpa) {
        var ret string
        return ret
        }
            return *o.Vpa
        }

        // GetVpaOk returns a tuple with the Vpa field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *BeneficiaryBeneficiaryInstrumentDetails) GetVpaOk() (*string, bool) {
        if o == nil || IsNil(o.Vpa) {
            return nil, false
        }
            return o.Vpa, true
        }

        // HasVpa returns a boolean if a field has been set.
        func (o *BeneficiaryBeneficiaryInstrumentDetails) HasVpa() bool {
        if o != nil && !IsNil(o.Vpa) {
        return true
        }

        return false
        }

        // SetVpa gets a reference to the given string and assigns it to the Vpa field.
        func (o *BeneficiaryBeneficiaryInstrumentDetails) SetVpa(v string) {
            o.Vpa = &v
        }

    func (o BeneficiaryBeneficiaryInstrumentDetails) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
    return []byte{}, err
    }
    return json.Marshal(toSerialize)
    }

func (o BeneficiaryBeneficiaryInstrumentDetails) ToMap() (map[string]interface{}, error) {
toSerialize := map[string]interface{}{}
            if !IsNil(o.BankAccountNumber) {
            toSerialize["bank_account_number"] = o.BankAccountNumber
            }
            if !IsNil(o.BankIfsc) {
            toSerialize["bank_ifsc"] = o.BankIfsc
            }
            if !IsNil(o.Vpa) {
            toSerialize["vpa"] = o.Vpa
            }
return toSerialize, nil
}



