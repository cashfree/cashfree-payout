/*
Cashfree Payout APIs

Cashfree's Payout APIs provide developers with a streamlined pathway to integrate advanced payout capabilities into their applications, platforms and websites.

API version: 2024-01-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_payout

import (
	"encoding/json"
)

// checks if the CreateTransferResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTransferResponse{}

// CreateTransferResponse Standard Transfer V2 Response
type CreateTransferResponse struct {
        // It displays the unique ID you created to identify the transfer.
    TransferId *string `json:"transfer_id,omitempty"`
        // It displays the unique ID created by Cashfree Payments. You receive this ID in the response after initiating the standard transfer request.
    CfTransferId *string `json:"cf_transfer_id,omitempty"`
        // It displays the status of the transfer.
    Status *string `json:"status,omitempty"`
    BeneficiaryDetails *CreateTransferResponseBeneficiaryDetails `json:"beneficiary_details,omitempty"`
        // It displays the transfer amount initiated in the request.
    TransferAmount *float64 `json:"transfer_amount,omitempty"`
        // It displays the service charge applicable for the successful transfer request.
    TransferServiceCharge *float64 `json:"transfer_service_charge,omitempty"`
        // It displays the service tax applicable for the successful transfer request.
    TransferServiceTax *float64 `json:"transfer_service_tax,omitempty"`
        // It displays the mode of the transfer.
    TransferMode *string `json:"transfer_mode,omitempty"`
        // It displays the unique number that is generated to recognise any fund transfer that is created by the bank that facilitates the transfer.
    TransferUtr *string `json:"transfer_utr,omitempty"`
        // It displays the ID of the fund source from where the money was debited for this transfer request.
    FundsourceId *string `json:"fundsource_id,omitempty"`
        // It displays the time of when the transfer request was added to the system.
    AddedOn *string `json:"added_on,omitempty"`
        // It displays the updated time for the transfer.
    UpdatedOn *string `json:"updated_on,omitempty"`
}

// NewCreateTransferResponse instantiates a new CreateTransferResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTransferResponse() *CreateTransferResponse {
this := CreateTransferResponse{}
return &this
}

// NewCreateTransferResponseWithDefaults instantiates a new CreateTransferResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTransferResponseWithDefaults() *CreateTransferResponse {
this := CreateTransferResponse{}
return &this
}

        // GetTransferId returns the TransferId field value if set, zero value otherwise.
        func (o *CreateTransferResponse) GetTransferId() string {
        if o == nil || IsNil(o.TransferId) {
        var ret string
        return ret
        }
            return *o.TransferId
        }

        // GetTransferIdOk returns a tuple with the TransferId field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *CreateTransferResponse) GetTransferIdOk() (*string, bool) {
        if o == nil || IsNil(o.TransferId) {
            return nil, false
        }
            return o.TransferId, true
        }

        // HasTransferId returns a boolean if a field has been set.
        func (o *CreateTransferResponse) HasTransferId() bool {
        if o != nil && !IsNil(o.TransferId) {
        return true
        }

        return false
        }

        // SetTransferId gets a reference to the given string and assigns it to the TransferId field.
        func (o *CreateTransferResponse) SetTransferId(v string) {
            o.TransferId = &v
        }

        // GetCfTransferId returns the CfTransferId field value if set, zero value otherwise.
        func (o *CreateTransferResponse) GetCfTransferId() string {
        if o == nil || IsNil(o.CfTransferId) {
        var ret string
        return ret
        }
            return *o.CfTransferId
        }

        // GetCfTransferIdOk returns a tuple with the CfTransferId field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *CreateTransferResponse) GetCfTransferIdOk() (*string, bool) {
        if o == nil || IsNil(o.CfTransferId) {
            return nil, false
        }
            return o.CfTransferId, true
        }

        // HasCfTransferId returns a boolean if a field has been set.
        func (o *CreateTransferResponse) HasCfTransferId() bool {
        if o != nil && !IsNil(o.CfTransferId) {
        return true
        }

        return false
        }

        // SetCfTransferId gets a reference to the given string and assigns it to the CfTransferId field.
        func (o *CreateTransferResponse) SetCfTransferId(v string) {
            o.CfTransferId = &v
        }

        // GetStatus returns the Status field value if set, zero value otherwise.
        func (o *CreateTransferResponse) GetStatus() string {
        if o == nil || IsNil(o.Status) {
        var ret string
        return ret
        }
            return *o.Status
        }

        // GetStatusOk returns a tuple with the Status field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *CreateTransferResponse) GetStatusOk() (*string, bool) {
        if o == nil || IsNil(o.Status) {
            return nil, false
        }
            return o.Status, true
        }

        // HasStatus returns a boolean if a field has been set.
        func (o *CreateTransferResponse) HasStatus() bool {
        if o != nil && !IsNil(o.Status) {
        return true
        }

        return false
        }

        // SetStatus gets a reference to the given string and assigns it to the Status field.
        func (o *CreateTransferResponse) SetStatus(v string) {
            o.Status = &v
        }

        // GetBeneficiaryDetails returns the BeneficiaryDetails field value if set, zero value otherwise.
        func (o *CreateTransferResponse) GetBeneficiaryDetails() CreateTransferResponseBeneficiaryDetails {
        if o == nil || IsNil(o.BeneficiaryDetails) {
        var ret CreateTransferResponseBeneficiaryDetails
        return ret
        }
            return *o.BeneficiaryDetails
        }

        // GetBeneficiaryDetailsOk returns a tuple with the BeneficiaryDetails field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *CreateTransferResponse) GetBeneficiaryDetailsOk() (*CreateTransferResponseBeneficiaryDetails, bool) {
        if o == nil || IsNil(o.BeneficiaryDetails) {
            return nil, false
        }
            return o.BeneficiaryDetails, true
        }

        // HasBeneficiaryDetails returns a boolean if a field has been set.
        func (o *CreateTransferResponse) HasBeneficiaryDetails() bool {
        if o != nil && !IsNil(o.BeneficiaryDetails) {
        return true
        }

        return false
        }

        // SetBeneficiaryDetails gets a reference to the given CreateTransferResponseBeneficiaryDetails and assigns it to the BeneficiaryDetails field.
        func (o *CreateTransferResponse) SetBeneficiaryDetails(v CreateTransferResponseBeneficiaryDetails) {
            o.BeneficiaryDetails = &v
        }

        // GetTransferAmount returns the TransferAmount field value if set, zero value otherwise.
        func (o *CreateTransferResponse) GetTransferAmount() float64 {
        if o == nil || IsNil(o.TransferAmount) {
        var ret float64
        return ret
        }
            return *o.TransferAmount
        }

        // GetTransferAmountOk returns a tuple with the TransferAmount field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *CreateTransferResponse) GetTransferAmountOk() (*float64, bool) {
        if o == nil || IsNil(o.TransferAmount) {
            return nil, false
        }
            return o.TransferAmount, true
        }

        // HasTransferAmount returns a boolean if a field has been set.
        func (o *CreateTransferResponse) HasTransferAmount() bool {
        if o != nil && !IsNil(o.TransferAmount) {
        return true
        }

        return false
        }

        // SetTransferAmount gets a reference to the given float64 and assigns it to the TransferAmount field.
        func (o *CreateTransferResponse) SetTransferAmount(v float64) {
            o.TransferAmount = &v
        }

        // GetTransferServiceCharge returns the TransferServiceCharge field value if set, zero value otherwise.
        func (o *CreateTransferResponse) GetTransferServiceCharge() float64 {
        if o == nil || IsNil(o.TransferServiceCharge) {
        var ret float64
        return ret
        }
            return *o.TransferServiceCharge
        }

        // GetTransferServiceChargeOk returns a tuple with the TransferServiceCharge field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *CreateTransferResponse) GetTransferServiceChargeOk() (*float64, bool) {
        if o == nil || IsNil(o.TransferServiceCharge) {
            return nil, false
        }
            return o.TransferServiceCharge, true
        }

        // HasTransferServiceCharge returns a boolean if a field has been set.
        func (o *CreateTransferResponse) HasTransferServiceCharge() bool {
        if o != nil && !IsNil(o.TransferServiceCharge) {
        return true
        }

        return false
        }

        // SetTransferServiceCharge gets a reference to the given float64 and assigns it to the TransferServiceCharge field.
        func (o *CreateTransferResponse) SetTransferServiceCharge(v float64) {
            o.TransferServiceCharge = &v
        }

        // GetTransferServiceTax returns the TransferServiceTax field value if set, zero value otherwise.
        func (o *CreateTransferResponse) GetTransferServiceTax() float64 {
        if o == nil || IsNil(o.TransferServiceTax) {
        var ret float64
        return ret
        }
            return *o.TransferServiceTax
        }

        // GetTransferServiceTaxOk returns a tuple with the TransferServiceTax field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *CreateTransferResponse) GetTransferServiceTaxOk() (*float64, bool) {
        if o == nil || IsNil(o.TransferServiceTax) {
            return nil, false
        }
            return o.TransferServiceTax, true
        }

        // HasTransferServiceTax returns a boolean if a field has been set.
        func (o *CreateTransferResponse) HasTransferServiceTax() bool {
        if o != nil && !IsNil(o.TransferServiceTax) {
        return true
        }

        return false
        }

        // SetTransferServiceTax gets a reference to the given float64 and assigns it to the TransferServiceTax field.
        func (o *CreateTransferResponse) SetTransferServiceTax(v float64) {
            o.TransferServiceTax = &v
        }

        // GetTransferMode returns the TransferMode field value if set, zero value otherwise.
        func (o *CreateTransferResponse) GetTransferMode() string {
        if o == nil || IsNil(o.TransferMode) {
        var ret string
        return ret
        }
            return *o.TransferMode
        }

        // GetTransferModeOk returns a tuple with the TransferMode field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *CreateTransferResponse) GetTransferModeOk() (*string, bool) {
        if o == nil || IsNil(o.TransferMode) {
            return nil, false
        }
            return o.TransferMode, true
        }

        // HasTransferMode returns a boolean if a field has been set.
        func (o *CreateTransferResponse) HasTransferMode() bool {
        if o != nil && !IsNil(o.TransferMode) {
        return true
        }

        return false
        }

        // SetTransferMode gets a reference to the given string and assigns it to the TransferMode field.
        func (o *CreateTransferResponse) SetTransferMode(v string) {
            o.TransferMode = &v
        }

        // GetTransferUtr returns the TransferUtr field value if set, zero value otherwise.
        func (o *CreateTransferResponse) GetTransferUtr() string {
        if o == nil || IsNil(o.TransferUtr) {
        var ret string
        return ret
        }
            return *o.TransferUtr
        }

        // GetTransferUtrOk returns a tuple with the TransferUtr field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *CreateTransferResponse) GetTransferUtrOk() (*string, bool) {
        if o == nil || IsNil(o.TransferUtr) {
            return nil, false
        }
            return o.TransferUtr, true
        }

        // HasTransferUtr returns a boolean if a field has been set.
        func (o *CreateTransferResponse) HasTransferUtr() bool {
        if o != nil && !IsNil(o.TransferUtr) {
        return true
        }

        return false
        }

        // SetTransferUtr gets a reference to the given string and assigns it to the TransferUtr field.
        func (o *CreateTransferResponse) SetTransferUtr(v string) {
            o.TransferUtr = &v
        }

        // GetFundsourceId returns the FundsourceId field value if set, zero value otherwise.
        func (o *CreateTransferResponse) GetFundsourceId() string {
        if o == nil || IsNil(o.FundsourceId) {
        var ret string
        return ret
        }
            return *o.FundsourceId
        }

        // GetFundsourceIdOk returns a tuple with the FundsourceId field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *CreateTransferResponse) GetFundsourceIdOk() (*string, bool) {
        if o == nil || IsNil(o.FundsourceId) {
            return nil, false
        }
            return o.FundsourceId, true
        }

        // HasFundsourceId returns a boolean if a field has been set.
        func (o *CreateTransferResponse) HasFundsourceId() bool {
        if o != nil && !IsNil(o.FundsourceId) {
        return true
        }

        return false
        }

        // SetFundsourceId gets a reference to the given string and assigns it to the FundsourceId field.
        func (o *CreateTransferResponse) SetFundsourceId(v string) {
            o.FundsourceId = &v
        }

        // GetAddedOn returns the AddedOn field value if set, zero value otherwise.
        func (o *CreateTransferResponse) GetAddedOn() string {
        if o == nil || IsNil(o.AddedOn) {
        var ret string
        return ret
        }
            return *o.AddedOn
        }

        // GetAddedOnOk returns a tuple with the AddedOn field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *CreateTransferResponse) GetAddedOnOk() (*string, bool) {
        if o == nil || IsNil(o.AddedOn) {
            return nil, false
        }
            return o.AddedOn, true
        }

        // HasAddedOn returns a boolean if a field has been set.
        func (o *CreateTransferResponse) HasAddedOn() bool {
        if o != nil && !IsNil(o.AddedOn) {
        return true
        }

        return false
        }

        // SetAddedOn gets a reference to the given string and assigns it to the AddedOn field.
        func (o *CreateTransferResponse) SetAddedOn(v string) {
            o.AddedOn = &v
        }

        // GetUpdatedOn returns the UpdatedOn field value if set, zero value otherwise.
        func (o *CreateTransferResponse) GetUpdatedOn() string {
        if o == nil || IsNil(o.UpdatedOn) {
        var ret string
        return ret
        }
            return *o.UpdatedOn
        }

        // GetUpdatedOnOk returns a tuple with the UpdatedOn field value if set, nil otherwise
        // and a boolean to check if the value has been set.
        func (o *CreateTransferResponse) GetUpdatedOnOk() (*string, bool) {
        if o == nil || IsNil(o.UpdatedOn) {
            return nil, false
        }
            return o.UpdatedOn, true
        }

        // HasUpdatedOn returns a boolean if a field has been set.
        func (o *CreateTransferResponse) HasUpdatedOn() bool {
        if o != nil && !IsNil(o.UpdatedOn) {
        return true
        }

        return false
        }

        // SetUpdatedOn gets a reference to the given string and assigns it to the UpdatedOn field.
        func (o *CreateTransferResponse) SetUpdatedOn(v string) {
            o.UpdatedOn = &v
        }

func (o CreateTransferResponse) ToMap() (map[string]interface{}, error) {
toSerialize := map[string]interface{}{}
            if !IsNil(o.TransferId) {
            toSerialize["transfer_id"] = o.TransferId
            }
            if !IsNil(o.CfTransferId) {
            toSerialize["cf_transfer_id"] = o.CfTransferId
            }
            if !IsNil(o.Status) {
            toSerialize["status"] = o.Status
            }
            if !IsNil(o.BeneficiaryDetails) {
            toSerialize["beneficiary_details"] = o.BeneficiaryDetails
            }
            if !IsNil(o.TransferAmount) {
            toSerialize["transfer_amount"] = o.TransferAmount
            }
            if !IsNil(o.TransferServiceCharge) {
            toSerialize["transfer_service_charge"] = o.TransferServiceCharge
            }
            if !IsNil(o.TransferServiceTax) {
            toSerialize["transfer_service_tax"] = o.TransferServiceTax
            }
            if !IsNil(o.TransferMode) {
            toSerialize["transfer_mode"] = o.TransferMode
            }
            if !IsNil(o.TransferUtr) {
            toSerialize["transfer_utr"] = o.TransferUtr
            }
            if !IsNil(o.FundsourceId) {
            toSerialize["fundsource_id"] = o.FundsourceId
            }
            if !IsNil(o.AddedOn) {
            toSerialize["added_on"] = o.AddedOn
            }
            if !IsNil(o.UpdatedOn) {
            toSerialize["updated_on"] = o.UpdatedOn
            }
return toSerialize, nil
}



